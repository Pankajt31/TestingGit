<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="12">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.bundled.apis.string.Split" name="Split" testItemId="2" title="Split: templates/Var1.txt=&gt;,=&gt;Tokens">
      <arguments>
        <argument id="input">
          <value class="template">templates/Var1.txt</value>
        </argument>
        <argument id="separator">
          <value class="value" valueClass="string">,</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">Tokens</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.If" name="If" testItemId="3" title="If: {Count(Tokens) = 4}">
      <arguments>
        <argument id="condition">
          <value class="eq">
            <lhs class="funcCall" id="Count">
              <argument id="value">
                <value class="variable">
                  <path element="Tokens"/>
                </value>
              </argument>
            </lhs>
            <rhs class="value" valueClass="decimal">4</rhs>
          </value>
        </argument>
      </arguments>
      <clauses>
        <clause name="then" testItemId="4">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.ForEach" name="ForEach" testItemId="5" title="For Each: {Tokens}=&gt;Iteration">
              <arguments>
                <argument id="list">
                  <value class="variable">
                    <path element="Tokens"/>
                  </value>
                </argument>
                <argument id="fromItem">
                  <value class="value" valueClass="decimal">1</value>
                </argument>
                <argument id="valueName">
                  <value class="value" valueClass="string">Iteration</value>
                </argument>
                <argument id="continueOnFailure"/>
              </arguments>
              <clauses>
                <clause name="substeps" testItemId="6"/>
              </clauses>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
  </steps>
  <tags/>
</testCase>
